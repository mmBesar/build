# .github/workflows/build-hl-bots.yml

# ðŸ”’ Required for publishing releases
permissions:
  contents: write

name: Build HLSDK Bot10

on:
  push:
    branches: [ main, master ]
    paths:
      - ".github/workflows/build-hl-bots.yml"
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git
    
    - name: Clone HLSDK Portable (bot10 branch)
      run: |
        git clone --depth 1 --branch bot10 https://github.com/FWGS/hlsdk-portable.git
    
    - name: Build HLSDK Bot10 (AMD64)
      run: |
        cd hlsdk-portable
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DGOLDSOURCE_SUPPORT=ON -D64BIT=ON -Wno-dev
        make -j$(nproc) hl
        
        # Verify and copy hl.so
        ls -la dlls/
        file dlls/hl.so
        mkdir -p ../../artifacts
        cp dlls/hl.so ../../artifacts/hl_amd64.so
    
    - name: Upload AMD64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: hl-bot-amd64
        path: artifacts/hl_amd64.so

  build-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
    
    - name: Clone HLSDK Portable (bot10 branch)
      run: |
        git clone --depth 1 --branch bot10 https://github.com/FWGS/hlsdk-portable.git
    
    - name: Build HLSDK Bot10 (ARM64)
      run: |
        cd hlsdk-portable
        mkdir build && cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DGOLDSOURCE_SUPPORT=ON \
          -D64BIT=ON \
          -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
          -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
          -DCMAKE_SYSTEM_NAME=Linux \
          -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
          -Wno-dev
        make -j$(nproc) hl
        
        # Verify and copy hl.so
        ls -la dlls/
        file dlls/hl.so
        mkdir -p ../../artifacts
        cp dlls/hl.so ../../artifacts/hl_arm64.so
    
    - name: Upload ARM64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: hl-bot-arm64
        path: artifacts/hl_arm64.so

  combine-artifacts:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    
    - name: List built files
      run: |
        echo "=== Built Bot Libraries ==="
        ls -la *.so
        echo ""
        echo "=== File Information ==="
        for f in *.so; do
          echo "File: $f"
          file "$f"
          echo "Size: $(stat -c%s "$f") bytes"
          echo ""
        done
    
    - name: Create release package
      run: |
        mkdir -p release
        cp hl_amd64.so release/
        cp hl_arm64.so release/
        
        # Create a simple readme
        cat > release/README.md << 'EOF'
        # Half-Life Bot Libraries
        
        Built from FWGS/hlsdk-portable bot10 branch
        
        ## Files:
        - `hl_amd64.so` - AMD64/x86_64 bot library
        - `hl_arm64.so` - ARM64/AArch64 bot library
        
        ## Usage:
        Place the appropriate `hl.so` file in your mod directory alongside xash3d-fwgs engine.
        EOF
        
        tar -czf hl-bots.tar.gz -C release .
    
    - name: Upload combined package
      uses: actions/upload-artifact@v4
      with:
        name: hl-bots-complete
        path: |
          hl-bots.tar.gz
          release/
        retention-days: 30
