# .github/workflows/build-hl-bots.yml

# ðŸ”’ Required for publishing releases
permissions:
  contents: write

name: Build HLSDK Bot10 & Xash3D FWGS

on:
  push:
    branches: [ main, master ]
    paths:
      - ".github/workflows/build-hl-bots.yml"
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up cross-compilation for ARM64
      if: matrix.arch == 'arm64'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev libasound2-dev
        sudo apt-get install -y libx11-dev libxext-dev libxrandr-dev
    
    - name: Clone HLSDK Portable (bot10 branch)
      run: |
        git clone --depth 1 --branch bot10 https://github.com/FWGS/hlsdk-portable.git hlsdk-portable
    
    - name: Clone Xash3D FWGS
      run: |
        git clone --depth 1 https://github.com/FWGS/xash3d-fwgs.git xash3d-fwgs
    
    - name: Build HLSDK Bot10 (AMD64)
      if: matrix.arch == 'amd64'
      run: |
        cd hlsdk-portable
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DGOLDSOURCE_SUPPORT=ON -Wno-dev
        make -j$(nproc)
        
        # Copy the built hl.so
        mkdir -p ../../artifacts/amd64
        cp dlls/hl.so ../../artifacts/amd64/hl.so
    
    - name: Build HLSDK Bot10 (ARM64)
      if: matrix.arch == 'arm64'
      run: |
        cd hlsdk-portable
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DGOLDSOURCE_SUPPORT=ON -Wno-dev \
          -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
          -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
          -DCMAKE_SYSTEM_NAME=Linux \
          -DCMAKE_SYSTEM_PROCESSOR=aarch64
        make -j$(nproc)
        
        # Copy the built hl.so
        mkdir -p ../../artifacts/arm64
        cp dlls/hl.so ../../artifacts/arm64/hl.so
    
    - name: Build Xash3D FWGS (AMD64)
      if: matrix.arch == 'amd64'
      run: |
        cd xash3d-fwgs
        python3 waf configure --build-type=release --disable-werror --enable-stb
        python3 waf build -j$(nproc)
        
        # Copy binaries
        mkdir -p ../artifacts/amd64/xash3d
        find build -name "xash3d" -executable -type f -exec cp {} ../artifacts/amd64/xash3d/ \;
        find build -name "*.so" -exec cp {} ../artifacts/amd64/xash3d/ \;
    
    - name: Build Xash3D FWGS (ARM64)
      if: matrix.arch == 'arm64'
      run: |
        cd xash3d-fwgs
        export CC=aarch64-linux-gnu-gcc
        export CXX=aarch64-linux-gnu-g++
        python3 waf configure --build-type=release --disable-werror --enable-stb
        python3 waf build -j$(nproc)
        
        # Copy binaries  
        mkdir -p ../artifacts/arm64/xash3d
        find build -name "xash3d" -executable -type f -exec cp {} ../artifacts/arm64/xash3d/ \;
        find build -name "*.so" -exec cp {} ../artifacts/arm64/xash3d/ \;
    
    - name: Verify build artifacts
      run: |
        echo "=== Build Artifacts for ${{ matrix.arch }} ==="
        find artifacts/${{ matrix.arch }} -type f -name "*.so" -o -name "xash3d*" | head -20
        
        # Check if hl.so exists and get file info
        if [ -f "artifacts/${{ matrix.arch }}/hl.so" ]; then
          echo "âœ“ hl.so found for ${{ matrix.arch }}"
          file artifacts/${{ matrix.arch }}/hl.so
          ls -la artifacts/${{ matrix.arch }}/hl.so
        else
          echo "âœ— hl.so not found for ${{ matrix.arch }}"
          exit 1
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hlsdk-xash3d-${{ matrix.arch }}
        path: artifacts/${{ matrix.arch }}/
        retention-days: 30
    
    - name: Create release assets (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd artifacts/${{ matrix.arch }}
        tar -czf ../../hlsdk-xash3d-${{ matrix.arch }}.tar.gz *
    
    - name: Upload to release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.arch }}
        path: hlsdk-xash3d-${{ matrix.arch }}.tar.gz

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: release-*
        merge-multiple: true
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          hlsdk-xash3d-amd64.tar.gz
          hlsdk-xash3d-arm64.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
