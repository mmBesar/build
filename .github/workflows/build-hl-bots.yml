# .github/workflows/build-hl-bots.yml

name: Build HLSDK Bot10

# ðŸ”’ Required for publishing releases
permissions:
  contents: write

on:
  push:
    branches: [ main, master ]
    paths:
      - ".github/workflows/build-hl-bots.yml"
  workflow_dispatch:

jobs:
  debug-build:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3
    
    - name: Clone and inspect HLSDK Portable (bot10 branch)
      run: |
        git clone --depth 1 --branch bot10 https://github.com/FWGS/hlsdk-portable.git
        cd hlsdk-portable
        
        echo "=== Repository Contents ==="
        ls -la
        
        echo "=== CMakeLists.txt exists? ==="
        ls -la CMakeLists.txt
        
        echo "=== WAF exists? ==="
        ls -la waf*
        
        echo "=== DLLs directory ==="
        ls -la dlls/ | head -10
        
        echo "=== Build options in CMakeLists.txt ==="
        grep -i -A5 -B5 "option\|set.*64\|add_subdirectory.*dll" CMakeLists.txt || true
    
    - name: Try CMake build with full output
      run: |
        cd hlsdk-portable
        mkdir build_cmake && cd build_cmake
        
        echo "=== CMake Configure ==="
        cmake .. -DCMAKE_BUILD_TYPE=Release -DGOLDSOURCE_SUPPORT=ON -D64BIT=ON -Wno-dev -DCMAKE_VERBOSE_MAKEFILE=ON
        
        echo "=== Make Targets ==="
        make help
        
        echo "=== Building ==="
        make VERBOSE=1
        
        echo "=== What was built? ==="
        find . -name "*.so" -o -name "*.dll" -o -name "*.dylib"
        find . -type f -executable
        ls -laR . | grep -E "\.(so|dll|dylib)$"
    
    - name: Try WAF build
      run: |
        cd hlsdk-portable
        
        echo "=== WAF Configure ==="
        python3 waf configure --build-type=release --64bits || python3 waf configure --build-type=release || true
        
        echo "=== WAF Build ==="
        python3 waf build || true
        
        echo "=== WAF Build Results ==="
        find . -name "*.so" -o -name "*.dll" -o -name "*.dylib"
    
    - name: Final file search
      run: |
        cd hlsdk-portable
        
        echo "=== ALL .so files in repository ==="
        find . -name "*.so" -type f -exec ls -la {} \; -exec file {} \;
        
        echo "=== ALL executable files ==="
        find . -type f -executable -exec file {} \; | head -20
        
        echo "=== Contents of build directories ==="
        ls -laR build* | head -50 || true
