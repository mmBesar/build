name: Build Xash3D FWGS Bots

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-xash3d-fwgs-bots.yml'
    branches:
      - main

jobs:

  patch-and-build:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, i386, arm64]

    steps:
      - uses: actions/checkout@v3
        with:
          repository: FWGS/hlsdk-portable
          ref: bot10
          submodules: recursive

      - name: Apply Bot_Register patch
        run: |
          apply_patch << 'EOF'
          *** Begin Patch
          *** Update File: cl_dll/client.cpp
          @@ void GiveFnptrsToDll(enginefuncs_t *pengfuncsFromEngine, globalvars_t *pGlobals) {
             g_engfuncs = pengfuncsFromEngine;
             g_globals = pGlobals;
          +  Bot_Register();  // Ensure bots are registered
          *** End Patch
          EOF

      - name: Install build dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y \
            cmake build-essential zip \
            gcc-multilib g++-multilib \
            gcc-12-aarch64-linux-gnu g++-12-aarch64-linux-gnu \
            libsdl2-dev libsdl2-2.0-0:i386

      - name: Configure & Build (bots enabled)
        run: |
          BUILD_DIR=build-${{ matrix.arch }}
          cmake -DENABLE_BOTS=ON \
                -D64BIT=$([ "${{ matrix.arch }}" = "i386" ] && echo 0 || echo 1) \
                -DCMAKE_BUILD_TYPE=Release \
                $([ "${{ matrix.arch }}" = "arm64" ] && echo "-DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc-12 -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++-12") \
                -B $BUILD_DIR -S .
          cmake --build $BUILD_DIR -- -j$(nproc)

      - name: Zip `hl.so` and `bot.so`
        run: |
          ZIP=bots-${{ matrix.arch }}.zip
          mkdir -p out
          cp build-${{ matrix.arch }}/dlls/hl.so out/hl.so || true
          cp build-${{ matrix.arch }}/dlls/bot.so out/bot.so || true
          zip -j out/$ZIP out/hl.so out/bot.so

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bots-${{ matrix.arch }}.zip
          path: out/bots-${{ matrix.arch }}.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: patch-and-build
    steps:
      - uses: actions/download-artifact@v4
        with: { name: bots-amd64.zip, path: . }
      - uses: actions/download-artifact@v4
        with: { name: bots-i386.zip, path: . }
      - uses: actions/download-artifact@v4
        with: { name: bots-arm64.zip, path: . }

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: xash3d-fwgs-bots
          name: Xash3D FWGS Bots
          files: |
            bots-amd64.zip
            bots-i386.zip
            bots-arm64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
