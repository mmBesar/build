name: Build Xash3D FWGS Bots

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-xash3d-fwgs-bots.yml'
    branches:
      - main

jobs:
  build:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, i386, arm64]

    steps:
      - name: Checkout bot10 branch
        uses: actions/checkout@v3
        with:
          repository: FWGS/hlsdk-portable
          ref: bot10
          submodules: recursive

      - name: Install cross-arch build dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y \
            cmake build-essential zip \
            gcc-multilib g++-multilib \
            gcc-12-aarch64-linux-gnu g++-12-aarch64-linux-gnu \
            libsdl2-dev:i386 libsdl2-dev

      - name: Configure & Build ${{ matrix.arch }}
        run: |
          ARCH=${{ matrix.arch }}
          BUILD_DIR=build-${ARCH}

          if [ "$ARCH" = "i386" ]; then
            cmake -D64BIT=0 -DCMAKE_BUILD_TYPE=Release -B $BUILD_DIR -S .
            cmake --build $BUILD_DIR -- -j$(nproc)

          elif [ "$ARCH" = "arm64" ]; then
            cmake -D64BIT=1 -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc-12 \
              -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++-12 \
              -B $BUILD_DIR -S .
            cmake --build $BUILD_DIR -- -j$(nproc)

          else
            cmake -D64BIT=1 -DCMAKE_BUILD_TYPE=Release -B $BUILD_DIR -S .
            cmake --build $BUILD_DIR -- -j$(nproc)

      - name: Zip build outputs
        run: |
          ARCH=${{ matrix.arch }}
          BUILD_DIR=build-${ARCH}
          OUT_ZIP=bots-${ARCH}.zip
          mkdir -p out
          zip -j out/$OUT_ZIP $BUILD_DIR/dlls/*.so || true
          if [ -d $BUILD_DIR/cl_dll ]; then
            zip -j out/$OUT_ZIP $BUILD_DIR/cl_dll/*.so || true
          fi

      - name: Upload ${{ matrix.arch }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: bots-${{ matrix.arch }}.zip
          path: out/bots-${{ matrix.arch }}.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download amd64
        uses: actions/download-artifact@v4
        with:
          name: bots-amd64.zip
          path: .

      - name: Download i386
        uses: actions/download-artifact@v4
        with:
          name: bots-i386.zip
          path: .

      - name: Download arm64
        uses: actions/download-artifact@v4
        with:
          name: bots-arm64.zip
          path: .

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: xash3d-fwgs-bots
          name: Xash3D FWGS Bots
          files: |
            bots-amd64.zip
            bots-i386.zip
            bots-arm64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
